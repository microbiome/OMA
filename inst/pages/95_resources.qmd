
# Resources {#sec-resources}

## Data containers

### Data container documentation

* SingleCellExperiment [@R_SingleCellExperiment]  

   + [Online tutorial](https://bioconductor.org/packages/release/bioc/vignettes/SingleCellExperiment/inst/doc/intro.html)  
   + [Project page](https://bioconductor.org/packages/release/bioc/html/SingleCellExperiment.html)  
   + [Publication](https://doi.org/10.1038/s41592-019-0654-x)  

* SummarizedExperiment [@R_SummarizedExperiment]  

   + [Online tutorial](https://bioconductor.org/packages/release/bioc/vignettes/SummarizedExperiment/inst/doc/SummarizedExperiment.html)  
   + [Project page](https://bioconductor.org/packages/release/bioc/html/SummarizedExperiment.html)  

* TreeSummarizedExperiment [@R_TreeSummarizedExperiment]  

   + [Online tutorial](https://bioconductor.org/packages/release/bioc/vignettes/TreeSummarizedExperiment/inst/doc/Introduction_to_treeSummarizedExperiment.html)  
   + [Project page](https://www.bioconductor.org/packages/release/bioc/html/TreeSummarizedExperiment.html)  
   + [Publication](https://doi.org/10.12688/f1000research.26669.2)  

* MultiAssayExperiment [@Ramos2017]  

   + [Online tutorial](https://www.bioconductor.org/packages/release/bioc/vignettes/MultiAssayExperiment/inst/doc/MultiAssayExperiment.html)  
   + [Project page](https://bioconductor.org/packages/release/bioc/html/MultiAssayExperiment.html)     
   + [Publication](https://doi.org/10.1158/0008-5472.CAN-17-0344)  

### Other relevant containers

* [DataFrame](https://rdrr.io/bioc/S4Vectors/man/DataFrame-class.html) which behaves similarly to `data.frame`, yet efficient and fast when used with large datasets.  
* [DNAString](https://rdrr.io/bioc/Biostrings/man/DNAString-class.html) along with `DNAStringSet`,`RNAString` and `RNAStringSet`  efficient storage and handling of long biological sequences are offered within the Biostrings package [@R_Biostrings].    
* GenomicRanges ([@GenomicRanges2013]) offers an efficient representation and manipulation of genomic annotations and alignments, see e.g. `GRanges` and `GRangesList` at [An Introduction to the GenomicRangesPackage](https://bioconductor.org/packages/release/bioc/vignettes/GenomicRanges/inst/doc/GenomicRangesIntroduction.html).    

[NGS Analysis Basics](http://girke.bioinformatics.ucr.edu/GEN242/tutorials/rsequences/rsequences/) provides a walk-through of the above-mentioned features with detailed examples.


### phyloseq: an alternative container for microbiome data

The `phyloseq` package and class became the first widely used data
container for microbiome data science in R. Many methods for taxonomic
profiling data are readily available for this class. We provide here a
short description how `phyloseq` and `*Experiment` classes relate to
each other.

`assays` : This slot is similar to `otu_table` in `phyloseq`. In a
               `SummarizedExperiment` object multiple assays, raw
               counts, transformed counts can be stored. See also
               [-@Ramos2017]
               for storing data from multiple `experiments` such as
               RNASeq, Proteomics, etc.  `rowData` : This slot is
               similar to `tax_table` in `phyloseq` to store taxonomic
               information.  `colData` : This slot is similar to
               `sample_data` in `phyloseq` to store information
               related to samples.  `rowTree` : This slot is similar
               to `phy_tree` in `phyloseq` to store phylogenetic tree.

In this book, you will encounter terms such as `FeatureIDs` and
`SampleIDs`.  `FeatureIDs` : These are basically OTU/ASV ids which are
row names in `assays` and `rowData`.  `SampleIDs` : As the name
suggests, these are sample ids which are column names in `assays` and
row names in `colData`. `FeatureIDs` and `SampleIDs` are used but the
technical terms `rownames` and `colnames` are encouraged to be used, since
they relate to actual objects we work with.

<img
src="https://raw.githubusercontent.com/FelixErnst/TreeSummarizedExperiment
/2293440c6e70ae4d6e978b6fdf2c42fdea7fb36a/vignettes/tse2.png"
width="100%"/>


#### Benchmarking TreeSE with phyloseq

TreeSE objects can be converted into phyloseq objects and vice versa, therefore
it is possible to compare the two containers in terms of computational efficiency.
Remarkably, TreeSE and phyloseq were benchmarked against one another in mia v1.2.3
and phyloseq v1.38.0, respectively. 5 standard microbiome analysis operationswere
applied to 4 datasets of varying size with both containers. In a nutshell, TreeSE
and phyloseq showed a similar performance for datasets of small and medium size
for most of the operations. However, TreeSE performed more efficiently as the size
of the datasets increased. Further details on such results can be found in the
[benchmarking repository](https://github.com/microbiome/benchmarking).

#### Resources on phyloseq

The phyloseq container provides analogous methods to TreeSE. The following
material can be used to familiarize with such alternative methods:

 * [List of R tools for microbiome analysis](https://microsud.github.io/Tools-Microbiome-Analysis/)  
 * phyloseq [@McMurdie2013]  
 * [microbiome tutorial](http://microbiome.github.io/tutorials/)  
 * [microbiomeutilities](https://microsud.github.io/microbiomeutilities/)
 * [phyloseq/TreeSE cheatsheet](https://microbiome.github.io/OMA/docs/devel/pages/97_extra_materials.html#cheatsheet)
 * Bioconductor Workflow for Microbiome Data Analysis: from raw reads to community analyses [@Callahan2016].
 


## R programming resources

### Base R and RStudio

If you are new to R, you could try [swirl](https://swirlstats.com/)
for a kickstart to R programming. Further support resources are
available through the Bioconductor
project [@Huber2015].

 * [Base R and RStudio cheatsheets](https://geomoer.github.io/moer-base-r/cheatsheet.html)  
 * [Package-specific cheatsheets](https://www.rstudio.com/resources/cheatsheets/)  
 * [Visualization with ggplot2](https://ggplot2.tidyverse.org/)   
 * [R graphics cookbook](http://www.cookbook-r.com/Graphs/)  


### Bioconductor Classes {#sec-bioc_intro}

[Introduction to data analysis with R and Bioconductor](https://carpentries-incubator.github.io/bioc-intro/); Carpentries introduction, including R & RStudio installation instructions

**S4 system**

S4 class system has brought several useful features to the
object-oriented programming paradigm within R, and it is constantly
deployed in R/Bioconductor packages [@Huber2015].
    
|   Online Document:

* Hervé Pagès, [A quick overview of the S4 class system](https://bioconductor.org/packages/release/bioc/vignettes/S4Vectors/inst/doc/S4QuickOverview.pdf).  
* Laurent Gatto, [A practical tutorial on S4 programming](https://bioconductor.org/help/course-materials/2013/CSAMA2013/friday/afternoon/S4-tutorial.pdf)  
* How S4 Methods Work [@Chambers2006]  

|   Books:

* John M. Chambers. Software for Data Analysis: Programming with R. Springer, New York, 2008. ISBN-13 978-0387759357 [@Chambers2008]  
* I Robert Gentleman. R Programming for Bioinformatics. Chapman & Hall/CRC, New York, 2008. ISBN-13 978-1420063677 [@gentleman2008r]  



## Reproducible reporting with Quarto {#sec-quarto}

### Learn Quarto

Reproducible reporting is the starting point for robust interactive
data science. Perform the following tasks:

 * If you are entirely new to Quarto, take
   [this short tutorial](https://quarto.org/docs/get-started/hello/rstudio.html)
   to get introduced to the most important functions within Quarto.
   Then experiment with different options from the
   [Quarto cheatsheet](https://res.cloudinary.com/dyd911kmh/image/upload/v1676540721/Marketing/Blog/Quarto_Cheat_Sheet.pdf).

 * Create a Quarto template in RStudio, and render it into a
   document (markdown, PDF, docx or other format). In case you are new
   to Quarto, its documentation provides guidelines to use Quarto with the
   R language ([here](https://quarto.org/docs/computations/r.html))
   and the RStudio IDE ([here](https://quarto.org/docs/tools/rstudio.html)).

 * Further examples are tips for Quarto are available in [this online tutorial](https://appsilon.com/r-quarto-tutorial/)
   to interactive reproducible reporting.

### Additional material on Rmarkdown

Being able to use Quarto in R partly relies on your previous knowledge of Rmarkdown. The following resources can help you get familiar with Rmarkdown:

 * [Online tutorial](https://www.markdowntutorial.com/)  
 * [Cheatsheet](https://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf)  
 * [Documentation](https://rmarkdown.rstudio.com/lesson-1.html)  
 * [Dr. C Titus Brown's tutorial](https://rpubs.com/marschmi/RMarkdown)  

**Figure sources:** 

**Original article**

- Huang R _et al_. (2021) TreeSummarizedExperiment: a S4 class 
for data with hierarchical structure. F1000Research 9:1246. [@Huang2021]

**Reference Sequence slot extension**

- Lahti L _et al_. (2020) [Upgrading the R/Bioconductor ecosystem for microbiome 
research](https://doi.org/10.7490/
f1000research.1118447.1) F1000Research 9:1464 (slides).

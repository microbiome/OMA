name: Link Checker

on:
  schedule:
    # Scheduled to run every day at midnight
    - cron: '*/5 * * * *'

jobs:
  check-links:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: gh-pages

      - name: Check links
        run: |
          failure=false
          # List all HTML files
          html_files=$(find . -name "*.html")

          # Loop through each HTML file
          for file in $html_files; do
            echo "Checking links in $file"
            
            # Extract all href links from HTML file
            links=$(grep -oP 'href="\K[^"]*' "$file")

            # Loop through each extracted link
            for link in $links; do
              # Check if the link is local (does not start with http:// or https://)
              if [[ ! "$link" =~ ^https?:// ]]; then
                # Normalize the path to remove unwanted './' and excessive slashes
                path="${link/.\//}"  # Removes './' from the path
                path="${path#/}"     # Removes any leading slash
                path="docs/devel/$path"  # Prefix the base path

                # Normalize further to resolve any redundancy in path formation
                path=$(echo $path | sed 's#//#/#g')  # Replaces '//' with '/'

                # Check if the file exists
                if [ -f "$path" ]; then
                  echo "    [✓] File exists: $path"
                else
                  echo "    [✖] File not found: $path"
                  failure=true
                fi
              else
                # Check the return code of the HTTP link
                status_code=$(curl -s -o /dev/null -w "%{http_code}" "$link")
                if [ "$status_code" -eq 200 ] || ([ "$status_code" -ge 300 ] && [ "$status_code" -lt 400 ]); then
                  echo "    [✓] Link is valid: $link"
                else
                  echo "    [✖] Link is invalid: $link (HTTP $status_code)"
                  failure=true
                fi
              fi
            done
          done

          # Exit the workflow with a failure status if any failure occurred
          if [ "$failure" = true ]; then
            echo "Error: At least one link doesn't work"
            exit 1
          fi

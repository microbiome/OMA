[["index.html", "Microbiome Analysis Preface", " Microbiome Analysis 2020-11-04 Preface "],["intro.html", "Chapter 1 Introduction", " Chapter 1 Introduction "],["data-operations.html", "Chapter 2 Data Operations 2.1 Common terminologies 2.2 Retrieving data elements 2.3 Extract specific elements 2.4 Library size 2.5 Agglomerate 2.6 Get unique 2.7 Pick specific 2.8 Join 2.9 Barplot", " Chapter 2 Data Operations 2.1 Common terminologies The mia package uses classes defined by TreeSummarizedExperiment, MicrobiomeExperiment and in general SummarizedExperiment. assays : Similar to otu_table in phyloseq. An SummarizedExperiment object can hold multiple assays, raw counts, transformed counts. See also MultiAssayExperiment rowData : Slot similar to tax_table in phyloseq colData : Slot similar to sample_data in phyloseq rowTree : Slot for phylogenetic tree. Similar to phy_tree in phyloseq FeatureIDs : These are row names in assays and rowData. Synonymous to OTU/ASV ids. SampleIDs : These are column names in assays and row names in colData. 2.2 Retrieving data elements Extract specific elements from TreeSummarizedExperiment and MicrobiomeExperiment object. library(mia) ## Warning: multiple methods tables found for &#39;agglomerateByRank&#39; library(dplyr) library(ggplot2) library(tibble) Example data data(GlobalPatterns, package = &quot;MicrobiomeExperiment&quot;) me &lt;- GlobalPatterns Create a relative abundance assay me &lt;- relAbundanceCounts(GlobalPatterns) me ## class: TreeSummarizedExperiment ## dim: 19216 26 ## metadata(0): ## assays(2): counts relabundance ## rownames(19216): 549322 522457 ... 200359 271582 ## rowData names(7): Kingdom Phylum ... Genus Species ## colnames(26): CL3 CC1 ... Even2 Even3 ## colData names(7): X.SampleID Primer ... SampleType Description ## reducedDimNames(0): ## altExpNames(0): ## rowLinks: a LinkDataFrame (19216 rows) ## rowTree: a phylo (19216 leaves) ## colLinks: NULL ## colTree: NULL Above there are now two assays 1] counts 2] relabundance 2.3 Extract specific elements 2.3.1 Assays Assay slots hold the counts and transformed data for FeatureIDs me_counts &lt;- assay(me, &quot;counts&quot;) me_counts[1:5,1:7] ## CL3 CC1 SV1 M31Fcsw M11Fcsw M31Plmr M11Plmr ## 549322 0 0 0 0 0 0 0 ## 522457 0 0 0 0 0 0 0 ## 951 0 0 0 0 0 0 1 ## 244423 0 0 0 0 0 0 0 ## 586076 0 0 0 0 0 0 0 Extract relative abundance data. me_reab &lt;- assay(me, &quot;relabundance&quot;) me_reab[1:5,1:7] ## CL3 CC1 SV1 M31Fcsw M11Fcsw M31Plmr M11Plmr ## 549322 0 0 0 0 0 0 0.00000e+00 ## 522457 0 0 0 0 0 0 0.00000e+00 ## 951 0 0 0 0 0 0 2.30471e-06 ## 244423 0 0 0 0 0 0 0.00000e+00 ## 586076 0 0 0 0 0 0 0.00000e+00 2.3.2 colData Get colData as a data.frame. me_sample_data &lt;- colData(me) %&gt;% as.data.frame() # show select row and columns me_sample_data[1:5,1:5] ## X.SampleID Primer Final_Barcode Barcode_truncated_plus_T ## CL3 CL3 ILBC_01 AACGCA TGCGTT ## CC1 CC1 ILBC_02 AACTCG CGAGTT ## SV1 SV1 ILBC_03 AACTGT ACAGTT ## M31Fcsw M31Fcsw ILBC_04 AAGAGA TCTCTT ## M11Fcsw M11Fcsw ILBC_05 AAGCTG CAGCTT ## Barcode_full_length ## CL3 CTAGCGTGCGT ## CC1 CATCGACGAGT ## SV1 GTACGCACAGT ## M31Fcsw TCGACATCTCT ## M11Fcsw CGACTGCAGCT 2.3.3 rowData Get rowData as a data.frame me_row_data &lt;- rowData(me) %&gt;% as.data.frame() # show select row and columns me_row_data[1:5,1:5] ## Kingdom Phylum Class Order Family ## 549322 Archaea Crenarchaeota Thermoprotei &lt;NA&gt; &lt;NA&gt; ## 522457 Archaea Crenarchaeota Thermoprotei &lt;NA&gt; &lt;NA&gt; ## 951 Archaea Crenarchaeota Thermoprotei Sulfolobales Sulfolobaceae ## 244423 Archaea Crenarchaeota Sd-NA &lt;NA&gt; &lt;NA&gt; ## 586076 Archaea Crenarchaeota Sd-NA &lt;NA&gt; &lt;NA&gt; 2.3.4 rowTree Get rowTree me_row_tree &lt;- rowTree(me) me_row_tree ## ## Phylogenetic tree with 19216 tips and 19215 internal nodes. ## ## Tip labels: ## 549322, 522457, 951, 244423, 586076, 246140, ... ## Node labels: ## , 0.858.4, 1.000.154, 0.764.3, 0.995.2, 1.000.2, ... ## ## Rooted; includes branch lengths. Check link between rownames (OTU/ASV ids) # extract the linkData # on rows rowL &lt;- rowLinks(x = me) 2.4 Library size Get total counts/sample reads_sample &lt;- colSums(assay(me, &quot;counts&quot;)) # add it to colData colData(me)$reads_sample &lt;- reads_sample Visualize library size me_sample_data &lt;- colData(me) %&gt;% as.data.frame() %&gt;% rownames_to_column(&quot;SampleId&quot;) ggplot(me_sample_data, aes(reads_sample, SampleId)) + geom_col(aes(fill=SampleType)) + theme_bw() + # prettify plot theme(axis.text = element_text(size = 10), axis.line.x = element_line(color = &quot;#242424&quot;), axis.line.y = element_line(color = &quot;#242424&quot;), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_rect(colour = &quot;#242424&quot;), legend.key = element_blank(), legend.text = element_text(color = &quot;#353535&quot;), legend.background = element_rect(colour = NA, fill = NA)) 2.5 Agglomerate Agglomerate at a specific taxonomic rank. If multiple assays (counts and relabundance) exists, both will be agglomerated. me_fam &lt;- agglomerateByRank(me, rank = &quot;Family&quot;, agglomerateTree = TRUE) print(me_fam) ## class: TreeSummarizedExperiment ## dim: 603 26 ## metadata(0): ## assays(2): counts relabundance ## rownames(603): Class::Thermoprotei Family::Sulfolobaceae ... ## Family::Thermodesulfobiaceae Phylum::SR1 ## rowData names(7): Kingdom Phylum ... Genus Species ## colnames(26): CL3 CC1 ... Even2 Even3 ## colData names(8): X.SampleID Primer ... Description reads_sample ## reducedDimNames(0): ## altExpNames(0): ## rowLinks: a LinkDataFrame (603 rows) ## rowTree: a phylo (603 leaves) ## colLinks: NULL ## colTree: NULL me_fam_reab &lt;- assay(me_fam, &quot;relabundance&quot;) me_fam_reab[1:5,1:7] ## CL3 CC1 SV1 M31Fcsw M11Fcsw M31Plmr ## Class::Thermoprotei 0.0000000000 0.000000e+00 0 0 0 0 ## Family::Sulfolobaceae 0.0000000000 0.000000e+00 0 0 0 0 ## Class::Sd-NA 0.0000000000 0.000000e+00 0 0 0 0 ## Order::NRP-J 0.0001990563 2.069651e-04 0 0 0 0 ## Family::SAGMA-X 0.0000000000 6.164919e-06 0 0 0 0 ## M11Plmr ## Class::Thermoprotei 0.000000e+00 ## Family::Sulfolobaceae 2.304710e-06 ## Class::Sd-NA 0.000000e+00 ## Order::NRP-J 6.914131e-06 ## Family::SAGMA-X 0.000000e+00 me_fam_reab &lt;- assay(me_fam, &quot;counts&quot;) me_fam_reab[1:5,1:7] ## CL3 CC1 SV1 M31Fcsw M11Fcsw M31Plmr M11Plmr ## Class::Thermoprotei 0 0 0 0 0 0 0 ## Family::Sulfolobaceae 0 0 0 0 0 0 1 ## Class::Sd-NA 0 0 0 0 0 0 0 ## Order::NRP-J 172 235 0 0 0 0 3 ## Family::SAGMA-X 0 7 0 0 0 0 0 These data can also be kept in altExp(me, &quot;family&quot;) &lt;- me_fam altExpNames now consists of family level data. This can be extended to use any level present in Kingdom, Phylum, Class, Order, Family, Genus, Species 2.6 Get unique Get which Phyla are present. head(unique(rowData(me)[,&quot;Phylum&quot;])) ## [1] &quot;Crenarchaeota&quot; &quot;Euryarchaeota&quot; &quot;Actinobacteria&quot; &quot;Spirochaetes&quot; ## [5] &quot;MVP-15&quot; &quot;Proteobacteria&quot; 2.7 Pick specific Retrieving of specific elements are required for specific analysis. For instance, extracting abundances for a specific taxa in all samples or all taxa in one sample. 2.7.1 Abundances of all taxa in specific sample #Note: getAbundanceSample() taxa.abundances.cc1 &lt;- assay(me)[, &quot;CC1&quot;] taxa.abundances.cc1[1:10] ## 549322 522457 951 244423 586076 246140 143239 244960 255340 144887 ## 0 0 0 0 0 0 1 0 194 5 2.7.2 Abundances of specific taxa in all samples #Note: getAbundanceFeature() taxa.abundances &lt;- assay(me)[&quot;255340&quot;,] taxa.abundances[1:10] ## CL3 CC1 SV1 M31Fcsw M11Fcsw M31Plmr M11Plmr F21Plmr M31Tong M11Tong ## 153 194 0 0 0 0 0 0 0 0 2.8 Join Joining otu/asv table and taxonomy in one data frame me_reab &lt;- assay(me, &quot;relabundance&quot;) %&gt;% as.data.frame() %&gt;% rownames_to_column(&quot;FeatureID&quot;) me_joined &lt;- rowData(me) %&gt;% as.data.frame() %&gt;% rownames_to_column(&quot;FeatureID&quot;) %&gt;% left_join(me_reab) ## Joining, by = &quot;FeatureID&quot; head(me_joined) ## FeatureID Kingdom Phylum Class Order Family ## 1 549322 Archaea Crenarchaeota Thermoprotei &lt;NA&gt; &lt;NA&gt; ## 2 522457 Archaea Crenarchaeota Thermoprotei &lt;NA&gt; &lt;NA&gt; ## 3 951 Archaea Crenarchaeota Thermoprotei Sulfolobales Sulfolobaceae ## 4 244423 Archaea Crenarchaeota Sd-NA &lt;NA&gt; &lt;NA&gt; ## 5 586076 Archaea Crenarchaeota Sd-NA &lt;NA&gt; &lt;NA&gt; ## 6 246140 Archaea Crenarchaeota Sd-NA &lt;NA&gt; &lt;NA&gt; ## Genus Species CL3 CC1 SV1 M31Fcsw M11Fcsw M31Plmr ## 1 &lt;NA&gt; &lt;NA&gt; 0 0 0 0 0 0 ## 2 &lt;NA&gt; &lt;NA&gt; 0 0 0 0 0 0 ## 3 Sulfolobus Sulfolobusacidocaldarius 0 0 0 0 0 0 ## 4 &lt;NA&gt; &lt;NA&gt; 0 0 0 0 0 0 ## 5 &lt;NA&gt; &lt;NA&gt; 0 0 0 0 0 0 ## 6 &lt;NA&gt; &lt;NA&gt; 0 0 0 0 0 0 ## M11Plmr F21Plmr M31Tong M11Tong LMEpi24M SLEpi20M AQC1cm ## 1 0.00000e+00 0 0 0 0 8.214821e-07 2.312143e-05 ## 2 0.00000e+00 0 0 0 0 0.000000e+00 0.000000e+00 ## 3 2.30471e-06 0 0 0 0 0.000000e+00 0.000000e+00 ## 4 0.00000e+00 0 0 0 0 0.000000e+00 0.000000e+00 ## 5 0.00000e+00 0 0 0 0 0.000000e+00 0.000000e+00 ## 6 0.00000e+00 0 0 0 0 0.000000e+00 0.000000e+00 ## AQC4cm AQC7cm NP2 NP3 NP5 TRRsed1 TRRsed2 TRRsed3 TS28 ## 1 4.242356e-05 7.650240e-05 1.909731e-06 0 0 0 0 0 0 ## 2 8.484711e-07 3.530880e-06 0.000000e+00 0 0 0 0 0 0 ## 3 0.000000e+00 0.000000e+00 0.000000e+00 0 0 0 0 0 0 ## 4 9.333182e-06 1.706592e-05 0.000000e+00 0 0 0 0 0 0 ## 5 8.484711e-07 5.884800e-07 0.000000e+00 0 0 0 0 0 0 ## 6 4.242356e-07 1.765440e-06 0.000000e+00 0 0 0 0 0 0 ## TS29 Even1 Even2 Even3 ## 1 0 0 0 0 ## 2 0 0 0 0 ## 3 0 0 0 0 ## 4 0 0 0 0 ## 5 0 0 0 0 ## 6 0 0 0 0 2.9 Barplot As example we first agglomerateByRank to phylum level. me_phy &lt;- agglomerateByRank(me, rank = &quot;Phylum&quot;, agglomerateTree = TRUE) 2.9.1 Top taxa Define a function to get top taxa. topTaxa &lt;- function(x, method=c(&quot;sum&quot;,&quot;mean&quot;,&quot;median&quot;), top=5){ taxs &lt;- NULL if(method==&quot;sum&quot;){ taxs &lt;- sort(rowSums(assay(x)),decreasing = TRUE)[1:top] } else if (method==&quot;mean&quot;){ taxs &lt;- sort(rowMeans(assay(x)),decreasing = TRUE)[1:top] } else if (method==&quot;median&quot;) { taxs &lt;- rowMedians(assay(x)) names(taxs) &lt;- rownames(assay(x)) taxs &lt;- sort(taxs,decreasing = TRUE)[1:top] } return(names(taxs)) } Get top 10 taxa top_phy &lt;- topTaxa(me_phy, method=&quot;median&quot;, top=10) top_phy ## [1] &quot;Phylum::Proteobacteria&quot; &quot;Phylum::Bacteroidetes&quot; ## [3] &quot;Phylum::Actinobacteria&quot; &quot;Phylum::Cyanobacteria&quot; ## [5] &quot;Phylum::Firmicutes&quot; &quot;Phylum::Verrucomicrobia&quot; ## [7] &quot;Phylum::Planctomycetes&quot; &quot;Phylum::Acidobacteria&quot; ## [9] &quot;Phylum::Chloroflexi&quot; &quot;Phylum::Tenericutes&quot; 2.9.2 Convert to long data.frame molten_se &lt;- meltAssay(me_phy, add_row_data = TRUE, add_col_data = TRUE, abund_values = &quot;relabundance&quot; ) 2.9.3 Barplot visualization A barplot of composition for top 10 phyla # Chage all not in top_phy to &quot;Other&quot; category molten_se &lt;- molten_se %&gt;% mutate(TaxVar= ifelse(FeatureID %in% top_phy, Phylum, &quot;Other&quot;)) p &lt;- ggplot(molten_se, aes_string(x=&quot;SampleID&quot;, y=&quot;relabundance&quot;, fill=&quot;TaxVar&quot;)) + geom_bar(position=&quot;stack&quot;, stat=&quot;identity&quot;) + scale_x_discrete() + labs(y = &quot;Relative Abundance&quot;,x=&quot;&quot;) + theme_bw() + theme(axis.text.x=element_text(angle=90, hjust=0.95, vjust=0.2), panel.grid = element_blank(), legend.text = element_text(face=&quot;italic&quot;)) + scale_fill_brewer(&quot;Phylum&quot;,palette = &quot;Paired&quot;) # this can be argument (fill.colors= &quot;Paired&quot;) or something similar p + scale_y_continuous(labels = scales::percent) # this can be optional (relative==TRUE) or something similar "],["bibliography.html", "Bibliography", " Bibliography "]]
